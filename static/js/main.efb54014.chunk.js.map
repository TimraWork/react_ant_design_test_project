{"version":3,"sources":["components/Timer/Timer.tsx","customHooks/useInput.tsx","components/ModalAddCard/ModalAddCard.tsx","localState/cardContext.ts","utils/invertHex.ts","components/ButtonAddCard/ButtonAddCard.tsx","utils/generateHex.ts","localState/cardReducer.ts","components/ModalDeleteCard/ModalDeleteCard.tsx","components/CardItem/CardItem.tsx","components/FilterCards/FilterCards.tsx","components/CardsContainer/CardsContainer.tsx","App.tsx","index.tsx"],"names":["Timer","initialSeconds","useState","seconds","setSeconds","useEffect","timerInterval","setInterval","clearInterval","className","useInput","initialValue","value","setValue","error","setError","onChange","event","target","onBlur","reset","ModalAddCard","isModalVisible","handleOk","handleCancel","city","population","afterClose","title","visible","onOk","onCancel","cancelText","okText","direction","style","width","autoFocus","placeholder","type","CardContext","createContext","cardState","dispatchCard","invertHex","hex","Number","toString","substr","toUpperCase","ButtonAddCard","useContext","setIsModalVisible","onClick","Math","floor","random","payload","backgroundColor","textColor","React","memo","cardReducer","state","action","id","uuidv4","filter","el","ModalDeleteCard","destroyOnClose","CardItem","background","color","border","borderRadius","extra","shape","borderColor","icon","DeleteOutlined","Search","Input","FilterCards","onSearch","size","allowClear","enterButton","CardsContainer","cards","setCards","searchValue","setSearchValue","newCards","includes","length","gutter","justify","map","xs","sm","md","lg","xl","message","showIcon","Content","Layout","Header","localStorageData","localStorage","getItem","localStorageParsedData","JSON","parse","App","useReducer","setItem","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efb54014.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport './Timer.scss';\n\nexport type ITimerProps = {\n    initialSeconds?: number\n}\n\nconst Timer: React.FC<ITimerProps> = ({ initialSeconds = 0 }) => {\n    const [ seconds, setSeconds ] =  useState(initialSeconds);\n\n    useEffect(() => {\n        let timerInterval = setInterval( () => setSeconds(seconds + 1), 1000);\n        return () => clearInterval(timerInterval);\n    });\n\n    return <div className=\"Timer\"> Прошло - {seconds} секунд </div>;\n}\n\nexport { Timer };","import { useState } from \"react\";\n\nconst useInput = (initialValue: string) => {\n    const [value, setValue] = useState(initialValue);\n    const [error, setError] = useState(\"\");\n\n    const handleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value);\n    };\n\n    const reset = () => {\n        setValue(\"\");\n        setError(\"\");\n    }\n\n    const handleBlur = (event:React.FocusEvent<HTMLInputElement>) => {\n        if(!event.target.value) {\n            setError(\"Заполните обязательное поле\");\n        } else {\n            setError(\"\");\n        }\n    }\n\n    return {\n        value,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        reset,\n        error\n    };\n};\n\nexport default useInput;","import { Input, Modal, Space } from 'antd';\nimport React from 'react';\nimport useInput from '../../customHooks/useInput';\n\nexport type IModalAddCardProps = {\n    isModalVisible: boolean,\n    handleOk: (city: string, population: string) => void,\n    handleCancel: () => void\n}\n\nconst ModalAddCard: React.FC<IModalAddCardProps> = ({ isModalVisible, handleOk, handleCancel }) => {\n    const city = useInput(\"\");\n    const population = useInput(\"\");\n\n    const onModalClose = () => {\n       city.reset();\n       population.reset();\n    }\n\n    return (\n        <Modal afterClose={onModalClose} title=\"Создать карточку\" visible={isModalVisible} onOk={() => handleOk(city.value, population.value)} onCancel={handleCancel} cancelText=\"Отмена\" okText=\"Создать\">\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Input autoFocus={true} placeholder=\"Введите название города\" value={city.value} onChange={city.onChange} onBlur={city.onBlur} />\n                {city.error && <div className=\"error\">{city.error}</div>}\n                <Input type=\"number\" placeholder=\"Введите численность населения\" value={population.value} onChange={population.onChange} onBlur={population.onBlur} />\n                {population.error && <div className=\"error\">{population.error}</div>}\n            </Space>\n        </Modal>\n    );\n}\n\nexport { ModalAddCard };","import { ActionTypes } from './../@types/types.d';\nimport {createContext} from 'react';\n\nexport type CardType = {\n    id: string;\n    city: string;\n    population: string;\n    backgroundColor: string;\n    textColor: string;\n}\n\nexport type InitialStateType = CardType[] | [];\n\nexport const CardContext = createContext<{\n    cardState: InitialStateType;\n    dispatchCard: React.Dispatch<ActionTypes>;\n}>({\n    cardState: [],\n    dispatchCard: () => null\n  });","export const invertHex = (hex:string) => {\n    return (Number(`0x1${hex}`) ^ 0xFFFFFF).toString(16).substr(1).toUpperCase(); \n}\n\n// invertHex('00FF00'); // Returns FF00FF","import React, {useState, useContext} from 'react';\nimport { Button } from 'antd';\nimport { ModalAddCard } from '../ModalAddCard/ModalAddCard';\nimport './ButtonAddCard.scss'\nimport { CardContext } from '../../localState/cardContext';\nimport { generateHex } from '../../utils/generateHex';\nimport { invertHex } from '../../utils/invertHex';\n\nconst ButtonAddCard: React.FC = () => {\n    const { dispatchCard } = useContext(CardContext);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const showModal = () => setIsModalVisible(true);\n    const handleCancel = () => setIsModalVisible(false);\n\n    const handleOk = (city:string, population: string) => {\n        const hex = generateHex();\n        dispatchCard({\n            type: 'add',\n            payload: {\n                city,\n                population,\n                backgroundColor: \"#\" + hex,\n                textColor: \"#\" + invertHex(hex)\n            }\n        })\n        setIsModalVisible(false);\n    }\n\n    return (\n        <div className=\"ButtonAddCard\">\n            <Button onClick={showModal} className=\"animationPulse\" type=\"primary\">Создать карточку</Button>\n            <ModalAddCard isModalVisible={isModalVisible} handleOk={handleOk} handleCancel={handleCancel} />\n        </div>\n    );\n}\n\nexport default React.memo(ButtonAddCard);","export const generateHex = () => Math.floor(Math.random()*16777215).toString(16);","import { ActionTypes } from './../@types/types.d';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CardType, InitialStateType } from './cardContext';\n\nexport function cardReducer(state:InitialStateType, action:ActionTypes) : InitialStateType {\n    switch(action.type) {\n        case 'add': {\n            const { city, population, backgroundColor, textColor } = action.payload;\n            return [\n                ...state,\n                {\n                    id: uuidv4(),\n                    city,\n                    population,\n                    backgroundColor,\n                    textColor\n                }\n            ]\n        }\n        case 'delete': {\n            const { id } = action.payload;\n            return state.filter( (el:CardType) => el.id !== id );\n        }\n        default:\n            return state;\n    }\n}","import { Modal } from 'antd';\nimport React from 'react';\n\nexport type IModalDeleteCardProps = {\n    isModalVisible: boolean,\n    handleOk: () => void,\n    handleCancel: () => void\n}\n\nconst ModalDeleteCard: React.FC<IModalDeleteCardProps> = ({ handleOk, handleCancel, isModalVisible }) => {\n    return (\n        <Modal destroyOnClose={true} title=\"Удалить карточку\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} cancelText=\"Отмена\" okText=\"Удалить\">\n        Вы действительно хотите удалить карточку?\n    </Modal>\n    );\n}\n\nexport { ModalDeleteCard };","import React, {useState, useContext} from 'react';\nimport { Card, Button, Tooltip } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { ModalDeleteCard } from '../ModalDeleteCard/ModalDeleteCard';\nimport { CardContext, CardType } from '../../localState/cardContext';\nimport './CardItem.scss';\n\nexport type ICardItemProps = {\n    el: CardType\n}\n\nconst CardItem: React.FC<ICardItemProps> = ({ el }) => {\n    const { dispatchCard } = useContext(CardContext);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const onCardDelete = () => setIsModalVisible(true);\n    const handleCancel = () => setIsModalVisible(false);\n\n    const onDeleteCard = () => {\n        dispatchCard({\n            type: 'delete',\n            payload: {\n                id: el.id\n            }\n        })\n        setIsModalVisible(false);\n    }\n\n    return (\n      <>\n        <Card\n          className=\"CardItem\"\n          style={{background: el.backgroundColor, color: el.textColor, border: 'none', borderRadius: '5px'}}\n          title={<span style={{color: el.textColor}}>{el.city}</span>}\n          extra={\n            <Tooltip title=\"Удалить\">\n              <Button onClick={onCardDelete} shape=\"circle\" type=\"primary\" style={{backgroundColor: el.textColor, borderColor: el.textColor}} icon={<DeleteOutlined />} />\n            </Tooltip>\n          }\n        >\n          <p>Численность: {el.population}</p>\n        </Card>\n        <ModalDeleteCard isModalVisible={isModalVisible} handleOk={onDeleteCard} handleCancel={handleCancel} />\n      </>\n    );\n}\n\nexport { CardItem };","import React from 'react';\nimport { Input, Space } from 'antd';\nimport './FilterCards.scss';\n\nconst { Search } = Input;\n\nexport type ICardItemProps = {\n    onSearch: (value: string) => void\n}\n\nconst FilterCards: React.FC<ICardItemProps> = ({ onSearch }) => {\n    return (\n        <div className=\"FilterCards\">\n            <Space direction=\"horizontal\" size=\"large\" >\n                <Search placeholder=\"Поиск\" onSearch={onSearch} allowClear style={{ width: '100%' }} enterButton/>\n            </Space>\n        </div>\n    );\n}\n\nexport { FilterCards };","import React, { useContext, useState, useEffect } from 'react';\nimport { CardContext } from '../../localState/cardContext';\nimport { CardItem } from '../CardItem/CardItem';\nimport { Alert, Col, Row } from 'antd';\nimport { FilterCards } from '../FilterCards/FilterCards';\n\nconst CardsContainer: React.FC = () => {\n    const { cardState } = useContext(CardContext);\n\n    const [cards, setCards] = useState(cardState);\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const onSearch = (value: string) => {\n        setSearchValue(value);\n    }\n    \n    useEffect(() => {\n        if(searchValue) {\n            const newCards = cardState.filter(({city, population} ) => (city.includes(searchValue) || population.includes(searchValue)));\n            setCards( newCards );\n        } else {\n            setCards( cardState );\n        }\n    }, [cardState, searchValue]);\n\n    return (\n        <>\n            { cardState.length > 1 ? <FilterCards onSearch={onSearch} /> : null}\n\n            <Row gutter={[10, 10]} justify=\"center\" >\n                { cards.map((el)=>(\n                    <Col key={el.id} xs={24} sm={12} md={8} lg={6} xl={4}><CardItem el={el} /></Col>\n                ))}\n                {!cardState.length ? <Alert message=\"Добавьте карточку ↑\" type=\"info\" showIcon /> : null}\n                {!cards.length && cardState.length ? <Alert message=\"Нет карточек, соответствующих строке поиска\" type=\"info\" showIcon /> : null}\n            </Row>\n        </>\n    );\n}\n\nexport { CardsContainer };","import React, {useReducer} from 'react';\nimport \"./assets/scss/common.scss\";\nimport { Layout } from 'antd';\nimport { Timer } from './components/Timer/Timer';\nimport ButtonAddCard from './components/ButtonAddCard/ButtonAddCard';\nimport { cardReducer } from './localState/cardReducer';\nimport { CardContext, CardType } from './localState/cardContext';\nimport { CardsContainer } from './components/CardsContainer/CardsContainer';\nimport { useEffect } from 'react';\n\nconst { Content, Header } = Layout;\nconst localStorageData = localStorage.getItem(\"localState\");\nconst localStorageParsedData:CardType[] = localStorageData ? JSON.parse(localStorageData) : [];\n\nconst App: React.FC = () => {\n  const [cardState, dispatchCard] = useReducer(cardReducer, localStorageParsedData);\n\n  useEffect(() => {\n    localStorage.setItem(\"localState\", JSON.stringify(cardState));\n  }, [cardState])\n\n  return (\n      <Layout>\n        <Header>\n          <Timer />\n        </Header>\n        <Content>\n          <CardContext.Provider value={{ cardState, dispatchCard }}>\n            <ButtonAddCard />\n            <CardsContainer />\n          </CardContext.Provider>\n        </Content>\n      </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root') );\n"],"sourceRoot":""}